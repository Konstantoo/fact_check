import aiohttp
import json
from typing import Optional
from loguru import logger


class PerplexityService:
    def __init__(self, api_key: str) -> None:
        self.api_key = api_key
        self.base_url = "https://api.perplexity.ai/chat/completions"

    async def _make_request(self, messages: list) -> str:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ Perplexity API"""
        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        payload = {
            "model": "sonar",
            "messages": messages,
            "max_tokens": 4000,
            "temperature": 0.2,
            "stream": False
        }
        
        try:
            async with aiohttp.ClientSession() as session:
                async with session.post(self.base_url, headers=headers, json=payload) as response:
                    if response.status == 200:
                        data = await response.json()
                        result = data["choices"][0]["message"]["content"]
                        logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Perplexity API: {result[:300]}...")
                        return result
                    else:
                        error_text = await response.text()
                        logger.error(f"Perplexity API error {response.status}: {error_text}")
                        return f"‚ùå –û—à–∏–±–∫–∞ API: {response.status}"
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Perplexity API: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {str(e)}"

    async def analyze_article(self, url: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å—é –ø–æ —Å—Å—ã–ª–∫–µ"""
        logger.info(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é: {url}")
        logger.info(f"–ü–æ–ª–Ω—ã–π URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: '{url}'")
        
        messages = [
            {
                "role": "system",
                "content": """–¢—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç—å–∏, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–∫—Ç—ã –∏ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏ –≤ –∞–Ω–∞–ª–∏–∑:
1. üìã –ö–†–ê–¢–ö–ò–ô –í–´–í–û–î - –æ—Å–Ω–æ–≤–Ω–∞—è —Å—É—Ç—å —Å—Ç–∞—Ç—å–∏
2. üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ö–¢–û–í - —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
3. üìö –ù–ï–ó–ê–í–ò–°–ò–ú–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò - –Ω–∞–π–¥–∏ 3-5 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ —Ç–µ–º–µ —Å –ö–û–ù–ö–†–ï–¢–ù–´–ú–ò –°–°–´–õ–ö–ê–ú–ò
4. ‚ö†Ô∏è –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ - –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å
5. üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò - –∫–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—é –ª—É—á—à–µ –æ—Ü–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –í–°–ï–ì–î–ê –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
- –ö–∞–∂–¥—ã–π —Ñ–∞–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω —Å—Å—ã–ª–∫–æ–π –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
- –§–æ—Ä–º–∞—Ç —Å—Å—ã–ª–æ–∫: [–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞](URL)
- –ú–∏–Ω–∏–º—É–º 3-5 —Å—Å—ã–ª–æ–∫ –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏"""
            },
            {
                "role": "user", 
                "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—Ç–∞—Ç—å—é: {url}\n\n–í–ê–ñ–ù–û: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–º–µ–Ω–Ω–æ —ç—Ç—É —Å—Å—ã–ª–∫—É, –∞ –Ω–µ –ø–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏. –ü—Ä–æ–≤–µ–¥–∏ –ø–æ–ª–Ω—ã–π —Ñ–∞–∫—Ç-—á–µ–∫–∏–Ω–≥ –∏ –Ω–∞–π–¥–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —ç—Ç–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏.\n\n–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å:\n- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\n- –ú–∏–Ω–∏–º—É–º 3-5 –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤\n- –§–æ—Ä–º–∞—Ç: [–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞](URL)\n- –ö–∞–∂–¥—ã–π —Ñ–∞–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω —Å—Å—ã–ª–∫–æ–π"
            }
        ]
        
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API —Å–æ–æ–±—â–µ–Ω–∏–µ: {messages[1]['content']}")
        return await self._make_request(messages)

    async def analyze_text(self, text: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç"""
        logger.info(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç: {text[:100]}...")
        
        messages = [
            {
                "role": "system",
                "content": """–¢—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–∫—Ç—ã –∏ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏ –≤ –∞–Ω–∞–ª–∏–∑:
1. üìã –ö–†–ê–¢–ö–ò–ô –í–´–í–û–î - –æ—Å–Ω–æ–≤–Ω–∞—è —Å—É—Ç—å —Ç–µ–∫—Å—Ç–∞
2. üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ö–¢–û–í - —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏  
3. üìö –ù–ï–ó–ê–í–ò–°–ò–ú–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò - –Ω–∞–π–¥–∏ 3-5 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ —Ç–µ–º–µ
4. ‚ö†Ô∏è –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ - –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç—å
5. üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò - –∫–∞–∫ —á–∏—Ç–∞—Ç–µ–ª—é –ª—É—á—à–µ –æ—Ü–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

–ê–ù–ê–õ–ò–ó–ò–†–£–ô –í–°–ï –ò–°–¢–û–ß–ù–ò–ö–ò, –Ω–æ —Å —É—á–µ—Ç–æ–º –∏—Ö –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏!
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏."""
            },
            {
                "role": "user",
                "content": f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç: {text}\n\n–ü—Ä–æ–≤–µ–¥–∏ –ø–æ–ª–Ω—ã–π —Ñ–∞–∫—Ç-—á–µ–∫–∏–Ω–≥ –∏ –Ω–∞–π–¥–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            }
        ]
        
        return await self._make_request(messages)

    async def check_fact(self, fact: str) -> str:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–∫—Ç"""
        logger.info(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–∫—Ç: {fact[:100]}...")
        
        messages = [
            {
                "role": "system", 
                "content": """–¢—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Ñ–∞–∫—Ç-—á–µ–∫–µ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–∫—Ç, –Ω–∞–π—Ç–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏—è.

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏:
1. üìã –í–ï–†–î–ò–ö–¢ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ/–æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç–æ/—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
2. üîç –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
3. üìö –ù–ï–ó–ê–í–ò–°–ò–ú–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò - 3-5 –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
4. ‚ö†Ô∏è –ö–û–ù–¢–ï–ö–°–¢ - –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –Ω—é–∞–Ω—Å—ã
5. üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò - –∫–∞–∫ –ª—É—á—à–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

–ê–ù–ê–õ–ò–ó–ò–†–£–ô –í–°–ï –ò–°–¢–û–ß–ù–ò–ö–ò, –Ω–æ —Å —É—á–µ—Ç–æ–º –∏—Ö –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏!
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏."""
            },
            {
                "role": "user",
                "content": f"–ü—Ä–æ–≤–µ—Ä—å —ç—Ç–æ—Ç —Ñ–∞–∫—Ç: {fact}\n\n–ù–∞–π–¥–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏—è."
            }
        ]
        
        return await self._make_request(messages)
